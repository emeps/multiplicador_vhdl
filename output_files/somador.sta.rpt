TimeQuest Timing Analyzer report for somador
Mon Aug 05 13:07:10 2024
Quartus II 32-bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clk'
 12. Slow Model Hold: 'clk'
 13. Slow Model Minimum Pulse Width: 'clk'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clk'
 24. Fast Model Hold: 'clk'
 25. Fast Model Minimum Pulse Width: 'clk'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; somador                                                           ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C8Q208C8                                                       ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 8      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                          ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+
; clk        ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+---------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 250.38 MHz ; 250.38 MHz      ; clk        ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -2.994 ; -41.245       ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.499 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.941 ; -31.621               ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk'                                                                                                                                                                                            ;
+--------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                                        ; To Node                                                          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; -2.994 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 4.034      ;
; -2.912 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.952      ;
; -2.825 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.865      ;
; -2.809 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.849      ;
; -2.764 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.804      ;
; -2.656 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.696      ;
; -2.574 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.614      ;
; -2.492 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.532      ;
; -2.490 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.541      ;
; -2.490 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.541      ;
; -2.490 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.541      ;
; -2.490 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.541      ;
; -2.422 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.462      ;
; -2.418 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.458      ;
; -2.383 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.423      ;
; -2.347 ; reg4bit:u_reg4bit_multip|reg[2]                                  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.387      ;
; -2.255 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.295      ;
; -2.216 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.267      ;
; -2.216 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.267      ;
; -2.216 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.267      ;
; -2.216 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.267      ;
; -2.214 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.254      ;
; -2.214 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.254      ;
; -2.214 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.254      ;
; -2.172 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.212      ;
; -2.113 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.153      ;
; -2.113 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.153      ;
; -2.113 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.153      ;
; -2.086 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.126      ;
; -2.077 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.117      ;
; -2.066 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.117      ;
; -2.065 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.116      ;
; -2.065 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.116      ;
; -2.065 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 3.116      ;
; -2.043 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.083      ;
; -2.037 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.077      ;
; -1.967 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 3.007      ;
; -1.961 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 3.001      ;
; -1.879 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 2.930      ;
; -1.878 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 2.929      ;
; -1.878 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 2.929      ;
; -1.878 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 2.929      ;
; -1.874 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.914      ;
; -1.874 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.914      ;
; -1.862 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.902      ;
; -1.858 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.898      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.851      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.803 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.843      ;
; -1.801 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.841      ;
; -1.788 ; reg4bit:u_reg4bit_multip|reg[2]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.828      ;
; -1.782 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.822      ;
; -1.781 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.821      ;
; -1.781 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.821      ;
; -1.781 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.821      ;
; -1.740 ; reg4bit:u_reg4bit_mult|reg[3]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.780      ;
; -1.727 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.767      ;
; -1.690 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.730      ;
; -1.646 ; reg4bit:u_reg4bit_mult|reg[1]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.686      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.624 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.664      ;
; -1.613 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.653      ;
; -1.602 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.642      ;
; -1.480 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.011      ; 2.531      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.476 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 2.516      ;
; -1.390 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.430      ;
; -1.307 ; reg4bit:u_reg4bit_multip|reg[3]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 2.347      ;
; -1.118 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 2.158      ;
; -0.891 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.931      ;
; -0.856 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.896      ;
; -0.751 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.791      ;
; -0.737 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.777      ;
; -0.734 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.774      ;
; -0.726 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.766      ;
+--------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk'                                                                                                                                                                                            ;
+-------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                                                        ; To Node                                                          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.499 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.805      ;
; 0.499 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.805      ;
; 0.771 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.077      ;
; 0.957 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.263      ;
; 1.065 ; reg4bit:u_reg4bit_mult|reg[1]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.371      ;
; 1.142 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.448      ;
; 1.223 ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.529      ;
; 1.225 ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.531      ;
; 1.270 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.576      ;
; 1.270 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.576      ;
; 1.284 ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.590      ;
; 1.301 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.607      ;
; 1.361 ; reg4bit:u_reg4bit_mult|reg[3]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.667      ;
; 1.435 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.741      ;
; 1.436 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.742      ;
; 1.448 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.754      ;
; 1.460 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.766      ;
; 1.468 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.774      ;
; 1.471 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.777      ;
; 1.492 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.798      ;
; 1.492 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.798      ;
; 1.492 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.798      ;
; 1.590 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.896      ;
; 1.625 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.931      ;
; 1.711 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.017      ;
; 1.852 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.158      ;
; 2.006 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.312      ;
; 2.013 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.319      ;
; 2.041 ; reg4bit:u_reg4bit_multip|reg[3]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.347      ;
; 2.102 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.408      ;
; 2.124 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.430      ;
; 2.191 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.497      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.210 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.516      ;
; 2.214 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.531      ;
; 2.318 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.624      ;
; 2.336 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.642      ;
; 2.347 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.653      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.358 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.664      ;
; 2.377 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.683      ;
; 2.380 ; reg4bit:u_reg4bit_mult|reg[1]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.686      ;
; 2.394 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.700      ;
; 2.424 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.730      ;
; 2.424 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.730      ;
; 2.431 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.737      ;
; 2.434 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.740      ;
; 2.457 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.763      ;
; 2.461 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.767      ;
; 2.464 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.781      ;
; 2.464 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.781      ;
; 2.464 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.781      ;
; 2.465 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.782      ;
; 2.474 ; reg4bit:u_reg4bit_mult|reg[3]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 2.780      ;
; 2.522 ; reg4bit:u_reg4bit_multip|reg[2]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.828      ;
; 2.529 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.846      ;
; 2.529 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.846      ;
; 2.529 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.846      ;
; 2.529 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 2.846      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.537 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.843      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.545 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 2.851      ;
; 2.592 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.898      ;
; 2.596 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.902      ;
; 2.608 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 2.914      ;
; 2.689 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 3.006      ;
; 2.689 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 3.006      ;
; 2.689 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 3.006      ;
; 2.689 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 3.006      ;
; 2.695 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 3.001      ;
; 2.777 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 3.083      ;
; 2.791 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 3.108      ;
; 2.791 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.011      ; 3.108      ;
+-------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk'                                                                                                             ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                                           ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------------------------------------------+
; -1.941 ; 1.000        ; 2.941          ; Port Rate        ; clk   ; Rise       ; clk                                                              ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[0]                                  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[0]                                  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[1]                                  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[1]                                  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[2]                                  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[2]                                  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[3]                                  ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[3]                                  ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[0]                                    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[0]                                    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[1]                                    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[1]                                    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[2]                                    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[2]                                    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[3]                                    ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[3]                                    ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ;
; -0.742 ; 0.500        ; 1.242          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ;
; -0.742 ; 0.500        ; 1.242          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]                                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]                                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[0]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[0]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[1]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[1]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[2]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[2]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[3]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[3]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[0]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[0]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[1]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[1]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[2]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[2]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[3]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[3]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[0]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[0]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[1]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[1]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[2]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[2]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[3]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[3]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[0]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[0]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[1]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[1]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[2]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[2]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[3]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[3]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[4]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[4]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[5]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[5]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[6]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[6]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[7]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[7]|clk                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; a0        ; clk        ; 5.455 ; 5.455 ; Rise       ; clk             ;
; a1        ; clk        ; 5.748 ; 5.748 ; Rise       ; clk             ;
; a2        ; clk        ; 5.321 ; 5.321 ; Rise       ; clk             ;
; a3        ; clk        ; 5.529 ; 5.529 ; Rise       ; clk             ;
; init      ; clk        ; 6.615 ; 6.615 ; Rise       ; clk             ;
; m0        ; clk        ; 5.444 ; 5.444 ; Rise       ; clk             ;
; m1        ; clk        ; 5.270 ; 5.270 ; Rise       ; clk             ;
; m2        ; clk        ; 5.263 ; 5.263 ; Rise       ; clk             ;
; m3        ; clk        ; 5.194 ; 5.194 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; a0        ; clk        ; -5.189 ; -5.189 ; Rise       ; clk             ;
; a1        ; clk        ; -5.482 ; -5.482 ; Rise       ; clk             ;
; a2        ; clk        ; -5.055 ; -5.055 ; Rise       ; clk             ;
; a3        ; clk        ; -5.263 ; -5.263 ; Rise       ; clk             ;
; init      ; clk        ; -6.349 ; -6.349 ; Rise       ; clk             ;
; m0        ; clk        ; -5.178 ; -5.178 ; Rise       ; clk             ;
; m1        ; clk        ; -5.004 ; -5.004 ; Rise       ; clk             ;
; m2        ; clk        ; -4.997 ; -4.997 ; Rise       ; clk             ;
; m3        ; clk        ; -4.928 ; -4.928 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; p[*]           ; clk        ; 8.309 ; 8.309 ; Rise       ; clk             ;
;  p[0]          ; clk        ; 7.649 ; 7.649 ; Rise       ; clk             ;
;  p[1]          ; clk        ; 7.830 ; 7.830 ; Rise       ; clk             ;
;  p[2]          ; clk        ; 7.791 ; 7.791 ; Rise       ; clk             ;
;  p[3]          ; clk        ; 7.811 ; 7.811 ; Rise       ; clk             ;
;  p[4]          ; clk        ; 7.722 ; 7.722 ; Rise       ; clk             ;
;  p[5]          ; clk        ; 8.309 ; 8.309 ; Rise       ; clk             ;
;  p[6]          ; clk        ; 8.161 ; 8.161 ; Rise       ; clk             ;
;  p[7]          ; clk        ; 8.131 ; 8.131 ; Rise       ; clk             ;
; segments_1[*]  ; clk        ; 8.896 ; 8.896 ; Rise       ; clk             ;
;  segments_1[0] ; clk        ; 8.686 ; 8.686 ; Rise       ; clk             ;
;  segments_1[1] ; clk        ; 8.839 ; 8.839 ; Rise       ; clk             ;
;  segments_1[2] ; clk        ; 8.857 ; 8.857 ; Rise       ; clk             ;
;  segments_1[3] ; clk        ; 8.799 ; 8.799 ; Rise       ; clk             ;
;  segments_1[4] ; clk        ; 8.883 ; 8.883 ; Rise       ; clk             ;
;  segments_1[5] ; clk        ; 8.896 ; 8.896 ; Rise       ; clk             ;
;  segments_1[6] ; clk        ; 8.890 ; 8.890 ; Rise       ; clk             ;
; segments_2[*]  ; clk        ; 9.017 ; 9.017 ; Rise       ; clk             ;
;  segments_2[0] ; clk        ; 8.813 ; 8.813 ; Rise       ; clk             ;
;  segments_2[1] ; clk        ; 8.954 ; 8.954 ; Rise       ; clk             ;
;  segments_2[2] ; clk        ; 8.954 ; 8.954 ; Rise       ; clk             ;
;  segments_2[3] ; clk        ; 8.443 ; 8.443 ; Rise       ; clk             ;
;  segments_2[4] ; clk        ; 9.017 ; 9.017 ; Rise       ; clk             ;
;  segments_2[5] ; clk        ; 8.849 ; 8.849 ; Rise       ; clk             ;
;  segments_2[6] ; clk        ; 8.809 ; 8.809 ; Rise       ; clk             ;
+----------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; p[*]           ; clk        ; 7.649 ; 7.649 ; Rise       ; clk             ;
;  p[0]          ; clk        ; 7.649 ; 7.649 ; Rise       ; clk             ;
;  p[1]          ; clk        ; 7.830 ; 7.830 ; Rise       ; clk             ;
;  p[2]          ; clk        ; 7.791 ; 7.791 ; Rise       ; clk             ;
;  p[3]          ; clk        ; 7.811 ; 7.811 ; Rise       ; clk             ;
;  p[4]          ; clk        ; 7.722 ; 7.722 ; Rise       ; clk             ;
;  p[5]          ; clk        ; 8.309 ; 8.309 ; Rise       ; clk             ;
;  p[6]          ; clk        ; 8.161 ; 8.161 ; Rise       ; clk             ;
;  p[7]          ; clk        ; 8.131 ; 8.131 ; Rise       ; clk             ;
; segments_1[*]  ; clk        ; 7.904 ; 7.904 ; Rise       ; clk             ;
;  segments_1[0] ; clk        ; 7.904 ; 7.904 ; Rise       ; clk             ;
;  segments_1[1] ; clk        ; 8.059 ; 8.059 ; Rise       ; clk             ;
;  segments_1[2] ; clk        ; 8.074 ; 8.074 ; Rise       ; clk             ;
;  segments_1[3] ; clk        ; 8.019 ; 8.019 ; Rise       ; clk             ;
;  segments_1[4] ; clk        ; 8.103 ; 8.103 ; Rise       ; clk             ;
;  segments_1[5] ; clk        ; 8.112 ; 8.112 ; Rise       ; clk             ;
;  segments_1[6] ; clk        ; 8.109 ; 8.109 ; Rise       ; clk             ;
; segments_2[*]  ; clk        ; 8.250 ; 8.250 ; Rise       ; clk             ;
;  segments_2[0] ; clk        ; 8.619 ; 8.619 ; Rise       ; clk             ;
;  segments_2[1] ; clk        ; 8.765 ; 8.765 ; Rise       ; clk             ;
;  segments_2[2] ; clk        ; 8.770 ; 8.770 ; Rise       ; clk             ;
;  segments_2[3] ; clk        ; 8.250 ; 8.250 ; Rise       ; clk             ;
;  segments_2[4] ; clk        ; 8.830 ; 8.830 ; Rise       ; clk             ;
;  segments_2[5] ; clk        ; 8.661 ; 8.661 ; Rise       ; clk             ;
;  segments_2[6] ; clk        ; 8.616 ; 8.616 ; Rise       ; clk             ;
+----------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clk   ; -0.247 ; -1.877        ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clk   ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clk   ; -1.380 ; -21.380               ;
+-------+--------+-----------------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk'                                                                                                                                                                                            ;
+--------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                                        ; To Node                                                          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; -0.247 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.279      ;
; -0.219 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.251      ;
; -0.212 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.254      ;
; -0.212 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.254      ;
; -0.212 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.254      ;
; -0.212 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.254      ;
; -0.194 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.226      ;
; -0.186 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.218      ;
; -0.129 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.161      ;
; -0.128 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.160      ;
; -0.127 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.169      ;
; -0.127 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.169      ;
; -0.127 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.169      ;
; -0.127 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.169      ;
; -0.124 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.156      ;
; -0.124 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.156      ;
; -0.124 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.156      ;
; -0.101 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.133      ;
; -0.093 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.125      ;
; -0.093 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.125      ;
; -0.093 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.125      ;
; -0.070 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.102      ;
; -0.065 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.097      ;
; -0.062 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.094      ;
; -0.055 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 1.087      ;
; -0.051 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.093      ;
; -0.051 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.093      ;
; -0.051 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.093      ;
; -0.051 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.093      ;
; -0.047 ; reg4bit:u_reg4bit_multip|reg[2]                                  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.079      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.042 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.074      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.017 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 1.049      ;
; -0.008 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.050      ;
; -0.008 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.050      ;
; -0.008 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.050      ;
; -0.008 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 1.050      ;
; -0.006 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.038      ;
; -0.006 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.038      ;
; -0.006 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.038      ;
; 0.005  ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.027      ;
; 0.028  ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.004      ;
; 0.029  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 1.003      ;
; 0.035  ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.997      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.036  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.996      ;
; 0.038  ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.994      ;
; 0.052  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.980      ;
; 0.065  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.967      ;
; 0.066  ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.966      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.078  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 1.000        ; 0.000      ; 0.954      ;
; 0.091  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.941      ;
; 0.095  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.937      ;
; 0.099  ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.933      ;
; 0.109  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.923      ;
; 0.110  ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.922      ;
; 0.124  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.908      ;
; 0.135  ; reg4bit:u_reg4bit_multip|reg[2]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.897      ;
; 0.141  ; reg4bit:u_reg4bit_mult|reg[3]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.891      ;
; 0.146  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.886      ;
; 0.146  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.886      ;
; 0.152  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.880      ;
; 0.175  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.857      ;
; 0.184  ; reg4bit:u_reg4bit_mult|reg[1]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.848      ;
; 0.195  ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 1.000        ; 0.010      ; 0.847      ;
; 0.208  ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.824      ;
; 0.271  ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.761      ;
; 0.273  ; reg4bit:u_reg4bit_multip|reg[3]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 1.000        ; 0.000      ; 0.759      ;
; 0.317  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.715      ;
; 0.360  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.672      ;
; 0.361  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.671      ;
; 0.361  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.671      ;
; 0.387  ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.645      ;
; 0.389  ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 1.000        ; 0.000      ; 0.643      ;
+--------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk'                                                                                                                                                                                            ;
+-------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                                                        ; To Node                                                          ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.367      ;
; 0.251 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.403      ;
; 0.357 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.509      ;
; 0.379 ; reg4bit:u_reg4bit_mult|reg[1]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.531      ;
; 0.384 ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.536      ;
; 0.390 ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.542      ;
; 0.407 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.559      ;
; 0.413 ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.565      ;
; 0.440 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.592      ;
; 0.446 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.598      ;
; 0.458 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.610      ;
; 0.458 ; reg4bit:u_reg4bit_mult|reg[3]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.610      ;
; 0.458 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.610      ;
; 0.463 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.615      ;
; 0.467 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.619      ;
; 0.491 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.643      ;
; 0.493 ; reg4bit:u_reg4bit_mult|reg[0]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.645      ;
; 0.519 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.671      ;
; 0.519 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.671      ;
; 0.534 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.686      ;
; 0.563 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.715      ;
; 0.580 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.732      ;
; 0.580 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.732      ;
; 0.580 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.732      ;
; 0.607 ; reg4bit:u_reg4bit_multip|reg[3]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.759      ;
; 0.609 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.761      ;
; 0.614 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.766      ;
; 0.614 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.766      ;
; 0.653 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.805      ;
; 0.665 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.817      ;
; 0.672 ; reg4bit:u_reg4bit_mult|reg[2]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.824      ;
; 0.685 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.847      ;
; 0.696 ; reg4bit:u_reg4bit_mult|reg[1]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.848      ;
; 0.705 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.857      ;
; 0.722 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.874      ;
; 0.725 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.877      ;
; 0.728 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.880      ;
; 0.730 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.882      ;
; 0.731 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.883      ;
; 0.731 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.883      ;
; 0.731 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.883      ;
; 0.734 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.886      ;
; 0.734 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.886      ;
; 0.739 ; reg4bit:u_reg4bit_mult|reg[3]                                    ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 0.891      ;
; 0.740 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.892      ;
; 0.745 ; reg4bit:u_reg4bit_multip|reg[2]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.897      ;
; 0.769 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.931      ;
; 0.770 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.932      ;
; 0.770 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.932      ;
; 0.770 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.932      ;
; 0.770 ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.922      ;
; 0.781 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.933      ;
; 0.789 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.941      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.954      ;
; 0.811 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.973      ;
; 0.812 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.974      ;
; 0.812 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.974      ;
; 0.812 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 0.974      ;
; 0.814 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.966      ;
; 0.842 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.994      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.844 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 0.996      ;
; 0.845 ; reg4bit:u_reg4bit_multip|reg[1]                                  ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 0.997      ;
; 0.851 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.003      ;
; 0.852 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.004      ;
; 0.864 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.026      ;
; 0.865 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.027      ;
; 0.865 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.027      ;
; 0.865 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.027      ;
; 0.875 ; reg4bit:u_reg4bit_multip|reg[0]                                  ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ; clk          ; clk         ; 0.000        ; 0.000      ; 1.027      ;
; 0.879 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; clk          ; clk         ; 0.000        ; 0.000      ; 1.031      ;
; 0.889 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.051      ;
; 0.890 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.052      ;
; 0.890 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.052      ;
; 0.890 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ; clk          ; clk         ; 0.000        ; 0.010      ; 1.052      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[3]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[2]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_mult|reg[0]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[0]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[1]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[2]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.897 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ; reg4bit:u_reg4bit_multip|reg[3]                                  ; clk          ; clk         ; 0.000        ; 0.000      ; 1.049      ;
; 0.922 ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ; reg4bit:u_reg4bit_mult|reg[1]                                    ; clk          ; clk         ; 0.000        ; 0.000      ; 1.074      ;
+-------+------------------------------------------------------------------+------------------------------------------------------------------+--------------+-------------+--------------+------------+------------+


+---------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk'                                                                                                             ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                                                           ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk   ; Rise       ; clk                                                              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; control_full_block:u_control_full_block|reg4bit:u_reg4bit|reg[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[0]                                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[0]                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[1]                                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[1]                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[2]                                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[2]                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[3]                                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_multip|reg[3]                                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[0]                                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[0]                                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[1]                                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[1]                                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[2]                                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[2]                                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[3]                                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; reg4bit:u_reg4bit_mult|reg[3]                                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[0]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[1]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[2]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[3]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[4]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[5]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[6]                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clk   ; Rise       ; shift_register_8bit:u_shift_register_8bit|reg[7]                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk|combout                                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk|combout                                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|inclk[0]                                             ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|inclk[0]                                             ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; clk~clkctrl|outclk                                               ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; clk~clkctrl|outclk                                               ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[0]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[0]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[1]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[1]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[2]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[2]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[3]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_control_full_block|u_reg4bit|reg[3]|clk                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[0]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[0]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[1]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[1]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[2]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[2]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_multip|reg[3]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_multip|reg[3]|clk                                      ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[0]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[0]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[1]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[1]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[2]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[2]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_reg4bit_mult|reg[3]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_reg4bit_mult|reg[3]|clk                                        ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[0]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[0]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[1]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[1]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[2]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[2]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[3]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[3]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[4]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[4]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[5]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[5]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[6]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[6]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; clk   ; Rise       ; u_shift_register_8bit|reg[7]|clk                                 ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; clk   ; Rise       ; u_shift_register_8bit|reg[7]|clk                                 ;
+--------+--------------+----------------+------------------+-------+------------+------------------------------------------------------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; a0        ; clk        ; 2.447 ; 2.447 ; Rise       ; clk             ;
; a1        ; clk        ; 2.514 ; 2.514 ; Rise       ; clk             ;
; a2        ; clk        ; 2.363 ; 2.363 ; Rise       ; clk             ;
; a3        ; clk        ; 2.475 ; 2.475 ; Rise       ; clk             ;
; init      ; clk        ; 2.634 ; 2.634 ; Rise       ; clk             ;
; m0        ; clk        ; 2.373 ; 2.373 ; Rise       ; clk             ;
; m1        ; clk        ; 2.323 ; 2.323 ; Rise       ; clk             ;
; m2        ; clk        ; 2.323 ; 2.323 ; Rise       ; clk             ;
; m3        ; clk        ; 2.307 ; 2.307 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; a0        ; clk        ; -2.327 ; -2.327 ; Rise       ; clk             ;
; a1        ; clk        ; -2.394 ; -2.394 ; Rise       ; clk             ;
; a2        ; clk        ; -2.243 ; -2.243 ; Rise       ; clk             ;
; a3        ; clk        ; -2.355 ; -2.355 ; Rise       ; clk             ;
; init      ; clk        ; -2.514 ; -2.514 ; Rise       ; clk             ;
; m0        ; clk        ; -2.253 ; -2.253 ; Rise       ; clk             ;
; m1        ; clk        ; -2.203 ; -2.203 ; Rise       ; clk             ;
; m2        ; clk        ; -2.203 ; -2.203 ; Rise       ; clk             ;
; m3        ; clk        ; -2.187 ; -2.187 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; p[*]           ; clk        ; 3.853 ; 3.853 ; Rise       ; clk             ;
;  p[0]          ; clk        ; 3.576 ; 3.576 ; Rise       ; clk             ;
;  p[1]          ; clk        ; 3.670 ; 3.670 ; Rise       ; clk             ;
;  p[2]          ; clk        ; 3.649 ; 3.649 ; Rise       ; clk             ;
;  p[3]          ; clk        ; 3.669 ; 3.669 ; Rise       ; clk             ;
;  p[4]          ; clk        ; 3.610 ; 3.610 ; Rise       ; clk             ;
;  p[5]          ; clk        ; 3.853 ; 3.853 ; Rise       ; clk             ;
;  p[6]          ; clk        ; 3.764 ; 3.764 ; Rise       ; clk             ;
;  p[7]          ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
; segments_1[*]  ; clk        ; 4.044 ; 4.044 ; Rise       ; clk             ;
;  segments_1[0] ; clk        ; 3.876 ; 3.876 ; Rise       ; clk             ;
;  segments_1[1] ; clk        ; 3.965 ; 3.965 ; Rise       ; clk             ;
;  segments_1[2] ; clk        ; 3.974 ; 3.974 ; Rise       ; clk             ;
;  segments_1[3] ; clk        ; 3.942 ; 3.942 ; Rise       ; clk             ;
;  segments_1[4] ; clk        ; 4.032 ; 4.032 ; Rise       ; clk             ;
;  segments_1[5] ; clk        ; 4.044 ; 4.044 ; Rise       ; clk             ;
;  segments_1[6] ; clk        ; 4.040 ; 4.040 ; Rise       ; clk             ;
; segments_2[*]  ; clk        ; 4.101 ; 4.101 ; Rise       ; clk             ;
;  segments_2[0] ; clk        ; 3.940 ; 3.940 ; Rise       ; clk             ;
;  segments_2[1] ; clk        ; 4.058 ; 4.058 ; Rise       ; clk             ;
;  segments_2[2] ; clk        ; 4.060 ; 4.060 ; Rise       ; clk             ;
;  segments_2[3] ; clk        ; 3.828 ; 3.828 ; Rise       ; clk             ;
;  segments_2[4] ; clk        ; 4.101 ; 4.101 ; Rise       ; clk             ;
;  segments_2[5] ; clk        ; 3.949 ; 3.949 ; Rise       ; clk             ;
;  segments_2[6] ; clk        ; 3.932 ; 3.932 ; Rise       ; clk             ;
+----------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; p[*]           ; clk        ; 3.576 ; 3.576 ; Rise       ; clk             ;
;  p[0]          ; clk        ; 3.576 ; 3.576 ; Rise       ; clk             ;
;  p[1]          ; clk        ; 3.670 ; 3.670 ; Rise       ; clk             ;
;  p[2]          ; clk        ; 3.649 ; 3.649 ; Rise       ; clk             ;
;  p[3]          ; clk        ; 3.669 ; 3.669 ; Rise       ; clk             ;
;  p[4]          ; clk        ; 3.610 ; 3.610 ; Rise       ; clk             ;
;  p[5]          ; clk        ; 3.853 ; 3.853 ; Rise       ; clk             ;
;  p[6]          ; clk        ; 3.764 ; 3.764 ; Rise       ; clk             ;
;  p[7]          ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
; segments_1[*]  ; clk        ; 3.660 ; 3.660 ; Rise       ; clk             ;
;  segments_1[0] ; clk        ; 3.660 ; 3.660 ; Rise       ; clk             ;
;  segments_1[1] ; clk        ; 3.749 ; 3.749 ; Rise       ; clk             ;
;  segments_1[2] ; clk        ; 3.758 ; 3.758 ; Rise       ; clk             ;
;  segments_1[3] ; clk        ; 3.725 ; 3.725 ; Rise       ; clk             ;
;  segments_1[4] ; clk        ; 3.816 ; 3.816 ; Rise       ; clk             ;
;  segments_1[5] ; clk        ; 3.827 ; 3.827 ; Rise       ; clk             ;
;  segments_1[6] ; clk        ; 3.824 ; 3.824 ; Rise       ; clk             ;
; segments_2[*]  ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
;  segments_2[0] ; clk        ; 3.868 ; 3.868 ; Rise       ; clk             ;
;  segments_2[1] ; clk        ; 3.990 ; 3.990 ; Rise       ; clk             ;
;  segments_2[2] ; clk        ; 3.992 ; 3.992 ; Rise       ; clk             ;
;  segments_2[3] ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
;  segments_2[4] ; clk        ; 4.035 ; 4.035 ; Rise       ; clk             ;
;  segments_2[5] ; clk        ; 3.887 ; 3.887 ; Rise       ; clk             ;
;  segments_2[6] ; clk        ; 3.861 ; 3.861 ; Rise       ; clk             ;
+----------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                           ;
+------------------+---------+-------+----------+---------+---------------------+
; Clock            ; Setup   ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+---------+-------+----------+---------+---------------------+
; Worst-case Slack ; -2.994  ; 0.215 ; N/A      ; N/A     ; -1.941              ;
;  clk             ; -2.994  ; 0.215 ; N/A      ; N/A     ; -1.941              ;
; Design-wide TNS  ; -41.245 ; 0.0   ; 0.0      ; 0.0     ; -31.621             ;
;  clk             ; -41.245 ; 0.000 ; N/A      ; N/A     ; -31.621             ;
+------------------+---------+-------+----------+---------+---------------------+


+-----------------------------------------------------------------------+
; Setup Times                                                           ;
+-----------+------------+-------+-------+------------+-----------------+
; Data Port ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-----------+------------+-------+-------+------------+-----------------+
; a0        ; clk        ; 5.455 ; 5.455 ; Rise       ; clk             ;
; a1        ; clk        ; 5.748 ; 5.748 ; Rise       ; clk             ;
; a2        ; clk        ; 5.321 ; 5.321 ; Rise       ; clk             ;
; a3        ; clk        ; 5.529 ; 5.529 ; Rise       ; clk             ;
; init      ; clk        ; 6.615 ; 6.615 ; Rise       ; clk             ;
; m0        ; clk        ; 5.444 ; 5.444 ; Rise       ; clk             ;
; m1        ; clk        ; 5.270 ; 5.270 ; Rise       ; clk             ;
; m2        ; clk        ; 5.263 ; 5.263 ; Rise       ; clk             ;
; m3        ; clk        ; 5.194 ; 5.194 ; Rise       ; clk             ;
+-----------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------------+
; Hold Times                                                              ;
+-----------+------------+--------+--------+------------+-----------------+
; Data Port ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-----------+------------+--------+--------+------------+-----------------+
; a0        ; clk        ; -2.327 ; -2.327 ; Rise       ; clk             ;
; a1        ; clk        ; -2.394 ; -2.394 ; Rise       ; clk             ;
; a2        ; clk        ; -2.243 ; -2.243 ; Rise       ; clk             ;
; a3        ; clk        ; -2.355 ; -2.355 ; Rise       ; clk             ;
; init      ; clk        ; -2.514 ; -2.514 ; Rise       ; clk             ;
; m0        ; clk        ; -2.253 ; -2.253 ; Rise       ; clk             ;
; m1        ; clk        ; -2.203 ; -2.203 ; Rise       ; clk             ;
; m2        ; clk        ; -2.203 ; -2.203 ; Rise       ; clk             ;
; m3        ; clk        ; -2.187 ; -2.187 ; Rise       ; clk             ;
+-----------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; p[*]           ; clk        ; 8.309 ; 8.309 ; Rise       ; clk             ;
;  p[0]          ; clk        ; 7.649 ; 7.649 ; Rise       ; clk             ;
;  p[1]          ; clk        ; 7.830 ; 7.830 ; Rise       ; clk             ;
;  p[2]          ; clk        ; 7.791 ; 7.791 ; Rise       ; clk             ;
;  p[3]          ; clk        ; 7.811 ; 7.811 ; Rise       ; clk             ;
;  p[4]          ; clk        ; 7.722 ; 7.722 ; Rise       ; clk             ;
;  p[5]          ; clk        ; 8.309 ; 8.309 ; Rise       ; clk             ;
;  p[6]          ; clk        ; 8.161 ; 8.161 ; Rise       ; clk             ;
;  p[7]          ; clk        ; 8.131 ; 8.131 ; Rise       ; clk             ;
; segments_1[*]  ; clk        ; 8.896 ; 8.896 ; Rise       ; clk             ;
;  segments_1[0] ; clk        ; 8.686 ; 8.686 ; Rise       ; clk             ;
;  segments_1[1] ; clk        ; 8.839 ; 8.839 ; Rise       ; clk             ;
;  segments_1[2] ; clk        ; 8.857 ; 8.857 ; Rise       ; clk             ;
;  segments_1[3] ; clk        ; 8.799 ; 8.799 ; Rise       ; clk             ;
;  segments_1[4] ; clk        ; 8.883 ; 8.883 ; Rise       ; clk             ;
;  segments_1[5] ; clk        ; 8.896 ; 8.896 ; Rise       ; clk             ;
;  segments_1[6] ; clk        ; 8.890 ; 8.890 ; Rise       ; clk             ;
; segments_2[*]  ; clk        ; 9.017 ; 9.017 ; Rise       ; clk             ;
;  segments_2[0] ; clk        ; 8.813 ; 8.813 ; Rise       ; clk             ;
;  segments_2[1] ; clk        ; 8.954 ; 8.954 ; Rise       ; clk             ;
;  segments_2[2] ; clk        ; 8.954 ; 8.954 ; Rise       ; clk             ;
;  segments_2[3] ; clk        ; 8.443 ; 8.443 ; Rise       ; clk             ;
;  segments_2[4] ; clk        ; 9.017 ; 9.017 ; Rise       ; clk             ;
;  segments_2[5] ; clk        ; 8.849 ; 8.849 ; Rise       ; clk             ;
;  segments_2[6] ; clk        ; 8.809 ; 8.809 ; Rise       ; clk             ;
+----------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; p[*]           ; clk        ; 3.576 ; 3.576 ; Rise       ; clk             ;
;  p[0]          ; clk        ; 3.576 ; 3.576 ; Rise       ; clk             ;
;  p[1]          ; clk        ; 3.670 ; 3.670 ; Rise       ; clk             ;
;  p[2]          ; clk        ; 3.649 ; 3.649 ; Rise       ; clk             ;
;  p[3]          ; clk        ; 3.669 ; 3.669 ; Rise       ; clk             ;
;  p[4]          ; clk        ; 3.610 ; 3.610 ; Rise       ; clk             ;
;  p[5]          ; clk        ; 3.853 ; 3.853 ; Rise       ; clk             ;
;  p[6]          ; clk        ; 3.764 ; 3.764 ; Rise       ; clk             ;
;  p[7]          ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
; segments_1[*]  ; clk        ; 3.660 ; 3.660 ; Rise       ; clk             ;
;  segments_1[0] ; clk        ; 3.660 ; 3.660 ; Rise       ; clk             ;
;  segments_1[1] ; clk        ; 3.749 ; 3.749 ; Rise       ; clk             ;
;  segments_1[2] ; clk        ; 3.758 ; 3.758 ; Rise       ; clk             ;
;  segments_1[3] ; clk        ; 3.725 ; 3.725 ; Rise       ; clk             ;
;  segments_1[4] ; clk        ; 3.816 ; 3.816 ; Rise       ; clk             ;
;  segments_1[5] ; clk        ; 3.827 ; 3.827 ; Rise       ; clk             ;
;  segments_1[6] ; clk        ; 3.824 ; 3.824 ; Rise       ; clk             ;
; segments_2[*]  ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
;  segments_2[0] ; clk        ; 3.868 ; 3.868 ; Rise       ; clk             ;
;  segments_2[1] ; clk        ; 3.990 ; 3.990 ; Rise       ; clk             ;
;  segments_2[2] ; clk        ; 3.992 ; 3.992 ; Rise       ; clk             ;
;  segments_2[3] ; clk        ; 3.756 ; 3.756 ; Rise       ; clk             ;
;  segments_2[4] ; clk        ; 4.035 ; 4.035 ; Rise       ; clk             ;
;  segments_2[5] ; clk        ; 3.887 ; 3.887 ; Rise       ; clk             ;
;  segments_2[6] ; clk        ; 3.861 ; 3.861 ; Rise       ; clk             ;
+----------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 152      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clk        ; clk      ; 152      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 9     ; 9    ;
; Unconstrained Input Port Paths  ; 9     ; 9    ;
; Unconstrained Output Ports      ; 22    ; 22   ;
; Unconstrained Output Port Paths ; 64    ; 64   ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 32-bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Mon Aug 05 13:07:09 2024
Info: Command: quartus_sta somador -c somador
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'somador.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk clk
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -2.994
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -2.994       -41.245 clk 
Info (332146): Worst-case hold slack is 0.499
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.499         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.941
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.941       -31.621 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.247
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.247        -1.877 clk 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 clk 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -21.380 clk 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 32-bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 321 megabytes
    Info: Processing ended: Mon Aug 05 13:07:10 2024
    Info: Elapsed time: 00:00:01
    Info: Total CPU time (on all processors): 00:00:00


