|somador
m3 => reg4bit:u_reg4bit_multip.d[3]
m2 => reg4bit:u_reg4bit_multip.d[2]
m1 => reg4bit:u_reg4bit_multip.d[1]
m0 => reg4bit:u_reg4bit_multip.d[0]
a3 => reg4bit:u_reg4bit_mult.d[3]
a2 => reg4bit:u_reg4bit_mult.d[2]
a1 => reg4bit:u_reg4bit_mult.d[1]
a0 => reg4bit:u_reg4bit_mult.d[0]
init => control_full_block:u_control_full_block.INIT
clk => control_full_block:u_control_full_block.CLK
clk => reg4bit:u_reg4bit_mult.clk
clk => reg4bit:u_reg4bit_multip.clk
clk => shift_register_8bit:u_shift_register_8bit.clk
p[0] <= shift_register_8bit:u_shift_register_8bit.data_out[0]
p[1] <= shift_register_8bit:u_shift_register_8bit.data_out[1]
p[2] <= shift_register_8bit:u_shift_register_8bit.data_out[2]
p[3] <= shift_register_8bit:u_shift_register_8bit.data_out[3]
p[4] <= shift_register_8bit:u_shift_register_8bit.data_out[4]
p[5] <= shift_register_8bit:u_shift_register_8bit.data_out[5]
p[6] <= shift_register_8bit:u_shift_register_8bit.data_out[6]
p[7] <= shift_register_8bit:u_shift_register_8bit.data_out[7]
segments_1[0] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[0]
segments_1[1] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[1]
segments_1[2] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[2]
segments_1[3] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[3]
segments_1[4] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[4]
segments_1[5] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[5]
segments_1[6] <= seven_segment_decoder:u_seven_segment_decoder.segments_1[6]
segments_2[0] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[0]
segments_2[1] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[1]
segments_2[2] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[2]
segments_2[3] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[3]
segments_2[4] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[4]
segments_2[5] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[5]
segments_2[6] <= seven_segment_decoder:u_seven_segment_decoder.segments_2[6]
display_1 <= <VCC>
display_2 <= <VCC>


|somador|control_full_block:u_control_full_block
INIT => control_block:u_control_block.INIT
MR3 => control_block:u_control_block.MR3
MR2 => control_block:u_control_block.MR2
MR1 => control_block:u_control_block.MR1
MR0 => control_block:u_control_block.MR0
CLK => control_block:u_control_block.CLK
CLK => reg4bit:u_reg4bit.clk
RESET => reg4bit:u_reg4bit.reset
MDLD <= control_block:u_control_block.MDLD
MRLD <= control_block:u_control_block.MRLD
SCLOAD <= control_block:u_control_block.SCLOAD
SCCLEAR <= control_block:u_control_block.SCCLEAR
SCSHR <= control_block:u_control_block.SCSHR


|somador|control_full_block:u_control_full_block|control_block:u_control_block
INIT => qf0.IN1
MR3 => qf0.IN1
MR3 => qf1.IN1
MR2 => qf2.IN1
MR2 => qf0.IN1
MR2 => qf3.IN1
MR1 => qf0.IN1
MR1 => qf1.IN1
MR0 => qf0.IN1
MR0 => qf2.IN1
CLK => ~NO_FANOUT~
q0 => qf3.IN1
q0 => qf2.IN1
q0 => qf1.IN0
q0 => MDLD.IN1
q0 => MRLD.IN1
q0 => SCLOAD.IN0
q0 => SCLOAD.IN0
q0 => SCLOAD.IN0
q0 => SCCLEAR.IN1
q0 => SCSHR.IN0
q0 => SCSHR.IN0
q0 => qf0.IN1
q0 => qf0.IN1
q0 => qf0.IN1
q0 => qf0.IN1
q0 => qf0.IN1
q1 => qf2.IN0
q1 => qf0.IN1
q1 => qf0.IN0
q1 => SCLOAD.IN1
q1 => MDLD.IN1
q1 => qf0.IN0
q1 => qf0.IN0
q1 => qf1.IN1
q2 => qf0.IN1
q2 => qf0.IN1
q2 => SCLOAD.IN1
q2 => SCSHR.IN1
q2 => MDLD.IN0
q2 => qf2.IN1
q3 => qf0.IN1
q3 => SCLOAD.IN1
q3 => SCSHR.IN1
q3 => MDLD.IN1
MDLD <= MDLD.DB_MAX_OUTPUT_PORT_TYPE
MRLD <= MRLD.DB_MAX_OUTPUT_PORT_TYPE
SCLOAD <= SCLOAD.DB_MAX_OUTPUT_PORT_TYPE
SCCLEAR <= SCCLEAR.DB_MAX_OUTPUT_PORT_TYPE
SCSHR <= SCSHR.DB_MAX_OUTPUT_PORT_TYPE
qf0 <= qf0.DB_MAX_OUTPUT_PORT_TYPE
qf1 <= qf1.DB_MAX_OUTPUT_PORT_TYPE
qf2 <= qf2.DB_MAX_OUTPUT_PORT_TYPE
qf3 <= qf3.DB_MAX_OUTPUT_PORT_TYPE


|somador|control_full_block:u_control_full_block|reg4bit:u_reg4bit
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
reset => reg[0].ACLR
reset => reg[1].ACLR
reset => reg[2].ACLR
reset => reg[3].ACLR
load => reg[3].ENA
load => reg[2].ENA
load => reg[1].ENA
load => reg[0].ENA
d[0] => reg[0].DATAIN
d[1] => reg[1].DATAIN
d[2] => reg[2].DATAIN
d[3] => reg[3].DATAIN
q[0] <= reg[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= reg[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= reg[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= reg[3].DB_MAX_OUTPUT_PORT_TYPE


|somador|reg4bit:u_reg4bit_mult
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
reset => reg[0].ACLR
reset => reg[1].ACLR
reset => reg[2].ACLR
reset => reg[3].ACLR
load => reg[3].ENA
load => reg[2].ENA
load => reg[1].ENA
load => reg[0].ENA
d[0] => reg[0].DATAIN
d[1] => reg[1].DATAIN
d[2] => reg[2].DATAIN
d[3] => reg[3].DATAIN
q[0] <= reg[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= reg[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= reg[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= reg[3].DB_MAX_OUTPUT_PORT_TYPE


|somador|reg4bit:u_reg4bit_multip
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
reset => reg[0].ACLR
reset => reg[1].ACLR
reset => reg[2].ACLR
reset => reg[3].ACLR
load => reg[3].ENA
load => reg[2].ENA
load => reg[1].ENA
load => reg[0].ENA
d[0] => reg[0].DATAIN
d[1] => reg[1].DATAIN
d[2] => reg[2].DATAIN
d[3] => reg[3].DATAIN
q[0] <= reg[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= reg[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= reg[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= reg[3].DB_MAX_OUTPUT_PORT_TYPE


|somador|shift_register_8bit:u_shift_register_8bit
clk => reg[0].CLK
clk => reg[1].CLK
clk => reg[2].CLK
clk => reg[3].CLK
clk => reg[4].CLK
clk => reg[5].CLK
clk => reg[6].CLK
clk => reg[7].CLK
reset => reg[0].ACLR
reset => reg[1].ACLR
reset => reg[2].ACLR
reset => reg[3].ACLR
reset => reg[4].ACLR
reset => reg[5].ACLR
reset => reg[6].ACLR
reset => reg[7].ACLR
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
load => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
shift_right => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
clear => reg.OUTPUTSELECT
data_in[0] => reg.DATAB
data_in[1] => reg.DATAB
data_in[2] => reg.DATAB
data_in[3] => reg.DATAB
data_in[4] => reg.DATAB
data_in[5] => reg.DATAB
data_in[6] => reg.DATAB
data_in[7] => reg.DATAB
data_out[0] <= reg[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= reg[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= reg[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= reg[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= reg[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= reg[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= reg[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= reg[7].DB_MAX_OUTPUT_PORT_TYPE


|somador|adder4bit:u_adder4bit
a[0] => Add0.IN4
a[1] => Add0.IN3
a[2] => Add0.IN2
a[3] => Add0.IN1
b[0] => Add0.IN8
b[1] => Add0.IN7
b[2] => Add0.IN6
b[3] => Add0.IN5
cin => Add1.IN10
sum[0] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum[1] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum[2] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
sum[3] <= Add1.DB_MAX_OUTPUT_PORT_TYPE
cout <= Add1.DB_MAX_OUTPUT_PORT_TYPE


|somador|seven_segment_decoder:u_seven_segment_decoder
binary_in[0] => Mux0.IN19
binary_in[0] => Mux1.IN19
binary_in[0] => Mux2.IN19
binary_in[0] => Mux3.IN19
binary_in[0] => Mux4.IN19
binary_in[0] => Mux5.IN19
binary_in[0] => Mux6.IN19
binary_in[1] => Mux0.IN18
binary_in[1] => Mux1.IN18
binary_in[1] => Mux2.IN18
binary_in[1] => Mux3.IN18
binary_in[1] => Mux4.IN18
binary_in[1] => Mux5.IN18
binary_in[1] => Mux6.IN18
binary_in[2] => Mux0.IN17
binary_in[2] => Mux1.IN17
binary_in[2] => Mux2.IN17
binary_in[2] => Mux3.IN17
binary_in[2] => Mux4.IN17
binary_in[2] => Mux5.IN17
binary_in[2] => Mux6.IN17
binary_in[3] => Mux0.IN16
binary_in[3] => Mux1.IN16
binary_in[3] => Mux2.IN16
binary_in[3] => Mux3.IN16
binary_in[3] => Mux4.IN16
binary_in[3] => Mux5.IN16
binary_in[3] => Mux6.IN16
binary_in[4] => Mux7.IN19
binary_in[4] => Mux8.IN19
binary_in[4] => Mux9.IN19
binary_in[4] => Mux10.IN19
binary_in[4] => Mux11.IN19
binary_in[4] => Mux12.IN19
binary_in[4] => Mux13.IN19
binary_in[5] => Mux7.IN18
binary_in[5] => Mux8.IN18
binary_in[5] => Mux9.IN18
binary_in[5] => Mux10.IN18
binary_in[5] => Mux11.IN18
binary_in[5] => Mux12.IN18
binary_in[5] => Mux13.IN18
binary_in[6] => Mux7.IN17
binary_in[6] => Mux8.IN17
binary_in[6] => Mux9.IN17
binary_in[6] => Mux10.IN17
binary_in[6] => Mux11.IN17
binary_in[6] => Mux12.IN17
binary_in[6] => Mux13.IN17
binary_in[7] => Mux7.IN16
binary_in[7] => Mux8.IN16
binary_in[7] => Mux9.IN16
binary_in[7] => Mux10.IN16
binary_in[7] => Mux11.IN16
binary_in[7] => Mux12.IN16
binary_in[7] => Mux13.IN16
segments_1[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments_1[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments_1[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments_1[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments_1[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments_1[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments_1[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
segments_2[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
segments_2[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
segments_2[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
segments_2[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
segments_2[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
segments_2[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
segments_2[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE


